/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package UI;

import dao.EmployeeDAO;
import dao.Report1DAOImpl;
import dao.TimeSheetDAO;
import entity.Employee;
import entity.Report1.Attendance;
import entity.Report1.ReportOnDepartment;
import entity.Report1.SalaryDetail;
import entity.TimeSheet;
import java.util.Date;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import utils.Auth;
import utils.CheckBoxEditor;
import utils.CheckBoxRenderer;
import utils.MsgBox;

/**
 *
 * @author caube
 */
public class TimeSheetJDialog3 extends javax.swing.JDialog {

    /**
     * Creates new form TimeSheetJDialog3
     */
    public TimeSheetJDialog3(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initialize();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabs = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblTime = new javax.swing.JTable();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnCheck = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        lblManagerID = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        cboMonthAttendance = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cboYearAttendance = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblAttendance = new javax.swing.JTable();
        pnlSalaryDetail = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboMonthSalary = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cboYearSalary = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSalaryDetail = new javax.swing.JTable();
        pnlReportDep = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblReportOnDepartment = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tblTime.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "FirstName", "Status"
            }
        ));
        jScrollPane5.setViewportView(tblTime);

        btnCheck.setText("Attendance check");
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        jLabel6.setText("Manager:");

        lblManagerID.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblManagerID.setForeground(new java.awt.Color(255, 0, 51));
        lblManagerID.setText("E001");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblManagerID)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCheck)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel6)
                        .addComponent(lblManagerID)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 270, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheck)
                .addGap(9, 9, 9))
        );

        tabs.addTab("Attendance", jPanel1);

        jLabel3.setText("MONTH: ");

        cboMonthAttendance.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cboMonthAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonthAttendanceActionPerformed(evt);
            }
        });

        jLabel4.setText("YEAR:");

        cboYearAttendance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboYearAttendanceActionPerformed(evt);
            }
        });

        tblAttendance.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "FirstName", "LastName", "WorkDay"
            }
        ));
        jScrollPane3.setViewportView(tblAttendance);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(cboMonthAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(79, 79, 79)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(cboYearAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cboMonthAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(cboYearAttendance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabs.addTab("WorkDay", jPanel2);

        jLabel1.setText("MONTH:");

        cboMonthSalary.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" }));
        cboMonthSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboMonthSalaryActionPerformed(evt);
            }
        });

        jLabel2.setText("YEAR:");

        cboYearSalary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboYearSalaryActionPerformed(evt);
            }
        });

        tblSalaryDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "FirstName", "LastName", "BaseSalary", "AdvPayment", "Bonus", "WorkDayInMonth", "NoAttendanceDay", "Total"
            }
        ));
        jScrollPane1.setViewportView(tblSalaryDetail);

        javax.swing.GroupLayout pnlSalaryDetailLayout = new javax.swing.GroupLayout(pnlSalaryDetail);
        pnlSalaryDetail.setLayout(pnlSalaryDetailLayout);
        pnlSalaryDetailLayout.setHorizontalGroup(
            pnlSalaryDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalaryDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cboMonthSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(83, 83, 83)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(cboYearSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );
        pnlSalaryDetailLayout.setVerticalGroup(
            pnlSalaryDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSalaryDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSalaryDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cboMonthSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(cboYearSalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        tabs.addTab("SalaryDetail", pnlSalaryDetail);

        tblReportOnDepartment.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "DepName", "NoEmployee", "TotalSalary", "HighestSalary", "LowestSalary", "AvgSalary"
            }
        ));
        jScrollPane2.setViewportView(tblReportOnDepartment);

        javax.swing.GroupLayout pnlReportDepLayout = new javax.swing.GroupLayout(pnlReportDep);
        pnlReportDep.setLayout(pnlReportDepLayout);
        pnlReportDepLayout.setHorizontalGroup(
            pnlReportDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 722, Short.MAX_VALUE)
        );
        pnlReportDepLayout.setVerticalGroup(
            pnlReportDepLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
        );

        tabs.addTab("ReportOnDepartment", pnlReportDep);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabs, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        // TODO add your handling code here:
        createEntity();
    }//GEN-LAST:event_btnCheckActionPerformed

    private void cboMonthAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonthAttendanceActionPerformed
        // TODO add your handling code here:
        fillAttendanceTable();
    }//GEN-LAST:event_cboMonthAttendanceActionPerformed

    private void cboYearAttendanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboYearAttendanceActionPerformed
        // TODO add your handling code here:
        fillAttendanceTable();
    }//GEN-LAST:event_cboYearAttendanceActionPerformed

    private void cboMonthSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboMonthSalaryActionPerformed
        // TODO add your handling code here:
        fillSalaryDetailTable();
    }//GEN-LAST:event_cboMonthSalaryActionPerformed

    private void cboYearSalaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboYearSalaryActionPerformed
        // TODO add your handling code here:
        fillSalaryDetailTable();
    }//GEN-LAST:event_cboYearSalaryActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TimeSheetJDialog3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TimeSheetJDialog3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TimeSheetJDialog3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TimeSheetJDialog3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TimeSheetJDialog3 dialog = new TimeSheetJDialog3(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCheck;
    private javax.swing.JComboBox<String> cboMonthAttendance;
    private javax.swing.JComboBox<String> cboMonthSalary;
    private javax.swing.JComboBox<String> cboYearAttendance;
    private javax.swing.JComboBox<String> cboYearSalary;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblManagerID;
    private javax.swing.JPanel pnlReportDep;
    private javax.swing.JPanel pnlSalaryDetail;
    private javax.swing.JTabbedPane tabs;
    private javax.swing.JTable tblAttendance;
    private javax.swing.JTable tblReportOnDepartment;
    private javax.swing.JTable tblSalaryDetail;
    private javax.swing.JTable tblTime;
    // End of variables declaration//GEN-END:variables
    EmployeeDAO eDAO = new EmployeeDAO();
    TimeSheetDAO tDAO = new TimeSheetDAO();
    Report1DAOImpl rpDAO = new Report1DAOImpl();

    private void initialize() {
        setLocationRelativeTo(null);
        fillEntityListOnTable();
        fillDepartmentReportTable();
        fillComboBoxYear();
        if (Auth.isManager()) {
            lblManagerID.setText(Auth.user.getId());

        } else {
            tblTime.setEnabled(false);
            jDateChooser1.setEnabled(false);
            btnCheck.setEnabled(false);
            lblManagerID.setText("Not a manager");
        }
        
        if (Auth.isEmployee()) {
            pnlSalaryDetail.setVisible(false);
            pnlReportDep.setVisible(false);
        }
    }

    private void fillEntityListOnTable() {
        CheckBoxRenderer render = new CheckBoxRenderer();
        CheckBoxEditor checkBoxEditor = new CheckBoxEditor();
        boolean status = true;

        tblTime.getColumnModel().getColumn(2).setCellRenderer(render);
        tblTime.getColumnModel().getColumn(2).setCellEditor(checkBoxEditor);
        DefaultTableModel model = (DefaultTableModel) tblTime.getModel();
        model.setRowCount(0);
        try {

            List<Employee> list = eDAO.selectAll();
            for (Employee e : list) {
                Object[] rowData = new Object[]{e.getId(), e.getFirstName(), status};

                model.addRow(rowData);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private void fillComboBoxYear() {
        DefaultComboBoxModel modelSalary = (DefaultComboBoxModel) cboYearSalary.getModel();
        DefaultComboBoxModel modelAttendance = (DefaultComboBoxModel) cboYearAttendance.getModel();
        modelSalary.removeAllElements();
        modelAttendance.removeAllElements();
        List<Integer> years = rpDAO.selectYear();
        for (Integer year : years) {
            modelAttendance.addElement(year);
            modelSalary.addElement(year);
        }
    }

    private void createEntity() {
        DefaultTableModel model = (DefaultTableModel) tblTime.getModel();
        Date date = jDateChooser1.getDate();

        try {
            if (date == null) {
                // Handle the case where no date is selected
                MsgBox.alert(this, "Vui lòng chọn một ngày.");
                return;
            }
            for (int i = 0; i < tblTime.getRowCount(); i++) {
                TimeSheet t = new TimeSheet();
                boolean status = (Boolean) model.getValueAt(i, 2);
                String empID = (String) model.getValueAt(i, 0);
                boolean exist = tDAO.existsEmployee(empID, date);
                if (exist) {
                    MsgBox.alert(this, "Đã có bản ghi cho nhân viên này ngày hôm nay");
                    return;
                } else {
                    t.setDate((date));
                    t.setStatus(status);
                    t.setEmp(eDAO.selectByID(empID));
                    t.setManager(eDAO.selectByID(lblManagerID.getText()));
                    tDAO.insert(t);
                }
            }
            MsgBox.alert(this, "Chấm công thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private void fillAttendanceTable() {
        DefaultTableModel model = (DefaultTableModel) tblAttendance.getModel();
        model.setRowCount(0);
        String monthString = (String) cboMonthAttendance.getSelectedItem();
        int month = Integer.parseInt(monthString);
        Integer year = (Integer) cboYearAttendance.getSelectedItem();
        try {
            List<Attendance> list = rpDAO.getAttendance(month, year);
            for (Attendance a : list) {
                Object[] rowData = new Object[]{a.getEmployee().getId(),
                    a.getEmployee().getFirstName(),
                    a.getEmployee().getLastName(),
                    a.getWorkDay()};
                model.addRow(rowData);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void fillSalaryDetailTable() {
        DefaultTableModel model = (DefaultTableModel) tblSalaryDetail.getModel();
        model.setRowCount(0);
        String monthString = (String) cboMonthSalary.getSelectedItem();
        int month = Integer.parseInt(monthString);
        Integer year = (Integer) cboYearSalary.getSelectedItem();
        try {
            List<SalaryDetail> list = rpDAO.getSalaryDetail(month, year);
            for (SalaryDetail s : list) {
                Object[] rowData = new Object[]{s.getEmployee().getId(),
                    s.getEmployee().getFirstName(),
                    s.getEmployee().getLastName(),
                    s.getEmployee().getBaseSalary(),
                    s.getAp(),
                    s.getBonus(),
                    s.getWorkDayInMonth(),
                    s.getNoDayAttendance(),
                    s.getTotalSalary()};
                model.addRow(rowData);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
        }
    }

    private void fillDepartmentReportTable() {
        DefaultTableModel model = (DefaultTableModel) tblReportOnDepartment.getModel();
        model.setRowCount(0);
        try {
            List<ReportOnDepartment> list = rpDAO.getReportOnDepartment();
            for (ReportOnDepartment rp : list) {
                Object[] rowData = new Object[]{rp.getDepartmentName(),
                    rp.getNoEmp(),
                    rp.getTotalSalary(),
                    rp.getHighestSalary(),
                    rp.getLowestSalary(),
                    rp.getAvgSalary()};
                model.addRow(rowData);
            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    public void selectAttendanceTab() {
        tabs.setSelectedIndex(0);
    }

    public void selectWorkDayTab() {
        tabs.setSelectedIndex(1);
    }

    public void selectSalaryDetailTab() {
        tabs.setSelectedIndex(2);
    }

    public void selectReportOnDepartmentTab() {
        tabs.setSelectedIndex(3);
    }
}
